SHELL := /bin/bash -o pipefail

TEMPDIR ?= $(SCRATCH)
THREADS ?= 1
VERBOSE ?=
LOG_LEVEL ?= -v

NPSV_ROOT ?= /home/mlinderman/research/npsv

REFERENCE ?= /storage/mlinderman/ngs/resources/gatk/hg38/Homo_sapiens_assembly38.fasta
GENOME ?= $(NPSV_ROOT)/etc/Homo_sapiens_assembly38.genome
GAPS ?= $(NPSV_ROOT)/etc/Homo_sapiens_assembly38.gaps.bed.gz
DBSNP_VCF ?= /storage/mlinderman/ngs/resources/gatk/hg38/dbsnp_146.hg38.vcf.gz
SIMPLE_REPEATS ?= /storage/mlinderman/ngs/resources/annotations/simple_repeats.hg38.bed.gz

PED ?= ceph-trio.ped
BAM ?= /storage/mlinderman/ngs/resources/ceph-trio/hg38/final/NA12878/NA12878-ready.bam
PAT_BAM ?= /storage/mlinderman/ngs/resources/ceph-trio/hg38/final/NA12891/NA12891-ready.bam
MAT_BAM ?= /storage/mlinderman/ngs/resources/ceph-trio/hg38/final/NA12892/NA12892-ready.bam
SNV ?= /storage/mlinderman/ngs/resources/ceph-trio/hg38/final/2020-07-08_project/ceph-gatk-haplotype-annotated.vcf.gz

LUMPY_VCF ?= /storage/mlinderman/ngs/resources/ceph-trio/hg38/final/NA12878/ceph-lumpy.vcf.gz
MANTA_VCF ?= /storage/mlinderman/ngs/resources/ceph-trio/hg38/final/NA12878/ceph-manta.vcf.gz

ITER ?= 1
REUSE ?= --reuse
SIMREF ?= 

SINGLE_KLASS ?= svm
VARIANT_KLASS ?= rf
HYBRID_KLASS ?= svm
HYBRID_SIZE ?= 1000

# Sequencing statistics obtained from Picard and GATK metrics
COVERAGE ?= 45.8
READ_LENGTH ?= 101
MEAN_FRAGMENT ?= 317.9
STD_FRAGMENT ?= 74.7
PROFILE ?= HS20

# Common indexing operations
%.vcf.gz.gbi : %.vcf.gz
	grabix index $<

%.nofilt.vcf.gz : %.vcf.gz
	bcftools annotate -Oz -o $@ -x "FILTER" $<
	bcftools index -t $@

# Select just deletions or insertions
%.DEL.vcf.gz  : %.vcf.gz 
	bcftools view -Oz -o $@ -i '(SVTYPE ~ "^DEL")' $<
	bcftools index -t $@

%.INS.vcf.gz  : %.vcf.gz 
	bcftools view -Oz -o $@ -i '(SVTYPE ~ "^INS")' $<
	bcftools index -t $@

# Manage reference data
load_shared_ref: $(REFERENCE)
	bwa shm $<

unload_shared_ref: $(REFERENCE)
	bwa shm -d

# Clean up with dataset, including splitting out NA12878, removing calls without genotypes and dropping multi-allelic sites
illumina-polaris-v2.1.genoytped.passing.vcf.gz : all_merge.vcf.gz 	
	bcftools view -s NA12878,NA12891,NA12892 $< | \
		bcftools norm -d none | \
		bcftools view -g ^miss -f PASS | \
		$(NPSV_ROOT)/scripts/fixSVVCF -r $(REFERENCE) -i /dev/stdin | \
		bcftools view -t ^chrY,chrM -i '(SVTYPE ~ "DEL" & INFO/SVLEN <= -50 & INFO/SVLEN >= -15000000) | (SVTYPE ~ "INS" & INFO/SVLEN >= 50 & INFO/SVLEN <= 15000000)' | \
		bcftools sort -Oz -o $@ -
	bcftools index -t $@

%.len-dist.csv : %.vcf.gz
	bcftools query -f '%INFO/SVLEN\n' $< > $@

len_dist : \
	illumina-polaris-v2.1.genoytped.passing.len-dist.csv

.PHONY: len_dist


# Preprocessing

define PICARD_template =
picard_metrics/$(notdir $(1:.bam=.gc_bias.detail_metrics)) picard_metrics/$(notdir $(1:.bam=.alignment_summary_metrics)) picard_metrics/$(notdir $(1:.bam=.insert_size_metrics)) : $(1)
	mkdir -p $$(dir $$@)
	java -Xmx3G -jar $(PICARD_JAR) CollectMultipleMetrics \
		I=$$< \
		O=$$(dir $$@)$(notdir $(1:.bam=)) \
		R=$(REFERENCE) \
		DB_SNP=$(DBSNP_VCF) \
		PROGRAM=null \
		PROGRAM=CollectGcBiasMetrics \
		PROGRAM=CollectAlignmentSummaryMetrics \
		PROGRAM=CollectInsertSizeMetrics

picard_metrics/$(notdir $(1:.bam=.wgs_metrics)) : $(1)
	mkdir -p $$(dir $$@)
	java -Xmx3G -jar $(PICARD_JAR) CollectWgsMetrics \
		I=$$< \
		O=$$@ \
		R=$(REFERENCE) 
endef

$(eval $(call PICARD_template,$(BAM)))
$(eval $(call PICARD_template,$(PAT_BAM)))
$(eval $(call PICARD_template,$(MAT_BAM)))

define PREPROCESS_template =
$(notdir $(1:.bam=.stats.json)) : $(1) picard_metrics/$(notdir $(1:.bam=.gc_bias.detail_metrics)) picard_metrics/$(notdir $(1:.bam=.insert_size_metrics))
	npsvg -t $(TEMPDIR) preprocess -r $(REFERENCE) -b $$< --picard-gc $$(word 2,$$^) --picard-insert $$(word 3,$$^) -o $$@
endef

$(eval $(call PREPROCESS_template,$(BAM)))
$(eval $(call PREPROCESS_template,$(PAT_BAM)))
$(eval $(call PREPROCESS_template,$(MAT_BAM)))

# NPSV

BLOCK_SIZE := 200
POLARIS_BLOCKS := $(shell seq 1 $(BLOCK_SIZE) 33200)
POLARIS_LAST := 33201_33328

polaris_inputs: illumina-polaris-v2.1.genoytped.passing.vcf.gz illumina-polaris-v2.1.genoytped.passing.vcf.gz.gbi
	./slurm/giab_inputs.bash -b $(BLOCK_SIZE) $< $@

.PHONY: polaris_inputs

# Rule to genotype individual chunks. This is typically invoked from an sbatch script. Directly use hybrid mode (as we would expect in practice)
npsv_polaris/%.npsv.vcf npsv_polaris/%.sim.tsv npsv_polaris/%.real.tsv : polaris_inputs/%.vcf.gz $(BAM) $(notdir $(BAM:.bam=.stats.json))
	mkdir -p $(dir $@)
	npsv $(LOG_LEVEL) --tempdir $(TEMPDIR) --threads $(THREADS) \
		--reference-sequence $(REFERENCE) \
		--genome $(GENOME) \
		--gaps $(GAPS) \
		--stats-path $(word 3,$^) --profile $(PROFILE) \	
		$(REUSE) \
		$(SIMREF) \
		-i $< \
		-b $(word 2,$^) \
		-o $(TEMPDIR) \
		--prefix $* \
		--DEL-gt-mode variant --DEL-n $(ITER) --DEL-classifier $(VARIANT_KLASS) \
		--INS-gt-mode variant --INS-n $(ITER) --INS-classifier $(VARIANT_KLASS)
	mv $(TEMPDIR)/$*.npsv.vcf $(TEMPDIR)/$*.sim.tsv $(TEMPDIR)/$*.real.tsv $(dir $@)

npsv_polaris/%.npsv.vcf.gz : npsv_polaris/%.npsv.vcf
	bgzip -c $< > $@
	bcftools index -t $@

# Construct total simulated and real data

npsv_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.sim.tsv : $(foreach start, $(POLARIS_BLOCKS), npsv_polaris/illumina-polaris-v2.1.genoytped.passing.$(start)_$(shell expr $(start) + $(BLOCK_SIZE) - 1 ).sim.tsv) npsv_polaris/illumina-polaris-v2.1.genoytped.passing.$(POLARIS_LAST).sim.tsv
	head -n 1 $< > $@
	tail -q -n+2 $^ >> $@

npsv_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.real.tsv : $(foreach start, $(POLARIS_BLOCKS), npsv_polaris/illumina-polaris-v2.1.genoytped.passing.$(start)_$(shell expr $(start) + $(BLOCK_SIZE) - 1 ).real.tsv) npsv_polaris/illumina-polaris-v2.1.genoytped.passing.$(POLARIS_LAST).real.tsv
	head -n 1 $< > $@
	tail -q -n+2 $^ >> $@

# 'Single-model' VCF genotyping
NA12878.illumina-polaris-v2.1.genoytped.passing.single.npsv.vcf.gz : illumina-polaris-v2.1.genoytped.passing.vcf.gz npsv_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.sim.tsv npsv_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.real.tsv 
	npsvg -v genotype -i $< --sim $(word 2,$^) --real $(word 3,$^) --samples NA12878 --downsample 1 \
		--DEL-gt-mode single --DEL-classifier $(SINGLE_KLASS)  \
		--INS-gt-mode single --INS-classifier $(SINGLE_KLASS) | bgzip > $@
	bcftools index -t $@

# 'Variant-mode' VCF genotyping
NA12878.illumina-polaris-v2.1.genoytped.passing.variant.npsv.vcf.gz : $(foreach start, $(POLARIS_BLOCKS), npsv_polaris/illumina-polaris-v2.1.genoytped.passing.$(start)_$(shell expr $(start) + $(BLOCK_SIZE) - 1 ).npsv.vcf.gz) npsv_polaris/illumina-polaris-v2.1.genoytped.passing.$(POLARIS_LAST).npsv.vcf.gz
	bcftools concat -a -Oz -o $@ $^
	bcftools index -t $@

# 'Hybrid-model' VCF genotyping
NA12878.illumina-polaris-v2.1.genoytped.passing.hybrid.npsv.vcf.gz : illumina-polaris-v2.1.genoytped.passing.vcf.gz npsv_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.sim.tsv npsv_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.real.tsv 
	npsvg -v genotype -i $< --sim $(word 2,$^) --real $(word 3,$^) --samples NA12878 --downsample 1 \
		--DEL-gt-mode hybrid --DEL-classifier $(VARIANT_KLASS) --DEL-hybrid-threshold $(HYBRID_SIZE) --DEL-hybrid-classifier $(HYBRID_KLASS) \
		--INS-gt-mode hybrid --INS-classifier $(VARIANT_KLASS) --INS-hybrid-threshold $(HYBRID_SIZE) --INS-hybrid-classifier $(HYBRID_KLASS) | bgzip > $@
	bcftools index -t $@


npsv_polaris_NA12891/%.npsv.vcf npsv_polaris/%.sim.tsv npsv_polaris/%.real.tsv : polaris_inputs/%.vcf.gz $(PAT_BAM) $(notdir $(PAT_BAM:.bam=.stats.json))
	mkdir -p $(dir $@)
	npsv $(LOG_LEVEL) --tempdir $(TEMPDIR) --threads $(THREADS) \
		--reference-sequence $(REFERENCE) \
		--genome $(GENOME) \
		--gaps $(GAPS) \
		--stats-path $(word 3,$^) --profile $(PROFILE) \	
		$(REUSE) \
		$(SIMREF) \
		-i $< \
		-b $(word 2,$^) \
		-o $(TEMPDIR) \
		--prefix $* \
		--DEL-gt-mode variant --DEL-n $(ITER) --DEL-classifier $(VARIANT_KLASS) \
		--INS-gt-mode variant --INS-n $(ITER) --INS-classifier $(VARIANT_KLASS)
	mv $(TEMPDIR)/$*.npsv.vcf $(TEMPDIR)/$*.sim.tsv $(TEMPDIR)/$*.real.tsv $(dir $@)

npsv_polaris_NA12892/%.npsv.vcf npsv_polaris/%.sim.tsv npsv_polaris/%.real.tsv : polaris_inputs/%.vcf.gz $(MAT_BAM) $(notdir $(MAT_BAM:.bam=.stats.json))
	mkdir -p $(dir $@)
	npsv $(LOG_LEVEL) --tempdir $(TEMPDIR) --threads $(THREADS) \
		--reference-sequence $(REFERENCE) \
		--genome $(GENOME) \
		--gaps $(GAPS) \
		--stats-path $(word 3,$^) --profile $(PROFILE) \	
		$(REUSE) \
		$(SIMREF) \
		-i $< \
		-b $(word 2,$^) \
		-o $(TEMPDIR) \
		--prefix $* \
		--DEL-gt-mode variant --DEL-n $(ITER) --DEL-classifier $(VARIANT_KLASS) \
		--INS-gt-mode variant --INS-n $(ITER) --INS-classifier $(VARIANT_KLASS)
	mv $(TEMPDIR)/$*.npsv.vcf $(TEMPDIR)/$*.sim.tsv $(TEMPDIR)/$*.real.tsv $(dir $@)

# Concordance

define truvari_template =
$(1)/summary.txt : $(2) $(3)
	rm -rf $$(dir $$@)
	truvari bench -f $(REFERENCE) -b $(3) -c $$< -o $$(dir $$@) \
		--sizemax 15000000 -s 50 -S 30 --pctsim=0 -r 20 -O 0.6 \
		--passonly --bSample NA12878 --cSample NA12878
endef

truvari_DEL_template = $(call truvari_template, $(1), $(2:.vcf.gz=.DEL.vcf.gz), $(3:.vcf.gz=.DEL.vcf.gz))
truvari_INS_template = $(call truvari_template, $(1), $(2:.vcf.gz=.INS.vcf.gz), $(3:.vcf.gz=.INS.vcf.gz))

# Compute the number of Mendelian errors using bcftools plugin
%.mendelian.txt : %.vcf.gz
	bcftools view -t ^X,Y,MT $< | bcftools +mendelian /dev/stdin -r GRCh37 -t NA12892,NA12891,NA12878 -c > $@

%.len.csv : %/tp-call.vcf
	python3 $(NPSV_ROOT)/paper/variant_stats.py --sample NA12878 len $< > $@

%.list.gq.csv : %/tp-call.vcf
	python3 $(NPSV_ROOT)/paper/variant_stats.py --sample NA12878 list $< > $@

$(eval $(call truvari_DEL_template, truvari_npsv_single_polaris_DEL, NA12878.illumina-polaris-v2.1.genoytped.passing.single.npsv.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_DEL_template, truvari_npsv_variant_polaris_DEL, NA12878.illumina-polaris-v2.1.genoytped.passing.variant.npsv.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_DEL_template, truvari_npsv_hybrid_polaris_DEL, NA12878.illumina-polaris-v2.1.genoytped.passing.hybrid.npsv.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_npsv_single_polaris_INS, NA12878.illumina-polaris-v2.1.genoytped.passing.single.npsv.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_npsv_variant_polaris_INS, NA12878.illumina-polaris-v2.1.genoytped.passing.variant.npsv.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_npsv_hybrid_polaris_INS, NA12878.illumina-polaris-v2.1.genoytped.passing.hybrid.npsv.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))

npsv_concordance: \
	truvari_npsv_single_polaris_DEL/summary.txt \
	truvari_npsv_variant_polaris_DEL/summary.txt \
	truvari_npsv_hybrid_polaris_DEL/summary.txt \
	truvari_npsv_single_polaris_INS/summary.txt \
	truvari_npsv_variant_polaris_INS/summary.txt \
	truvari_npsv_hybrid_polaris_INS/summary.txt \
	truvari_npsv_single_polaris_DEL.list.gq.csv \
	truvari_npsv_variant_polaris_DEL.list.gq.csv \
	truvari_npsv_hybrid_polaris_DEL.list.gq.csv \
	truvari_npsv_single_polaris_INS.list.gq.csv \
	truvari_npsv_variant_polaris_INS.list.gq.csv \
	truvari_npsv_hybrid_polaris_INS.list.gq.csv


.PHONY: npsv_concordance

# svviz2

svviz2_polaris/%.report.tsv : polaris_inputs/%.vcf.gz
	mkdir -p $(dir $@)
	svviz2 \
		--ref $(REFERENCE) -o $(dir $@) --report-only \
		--variants <(bcftools annotate --set-id +'%CHROM\_%POS\_%INFO/END' $<) \
	  	$(BAM)

svviz2_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.svviz2_count.vcf.gz : illumina-polaris-v2.1.genoytped.passing.vcf.gz
	svviz22vcf --model count -i $< -r svviz2_polaris \
		-s $(notdir $(BAM:.bam=)) \
		-o /dev/stdout | \
		bcftools reheader -s <(echo -e "NA12878") - | \
		sed 's/\bnan\b/./g' | \
		bgzip > $@
	bcftools index -t $@

svviz2_polaris/%.illumina-polaris-v2.1.genoytped.passing.svviz2_count.vcf.gz : svviz2_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.svviz2_count.vcf.gz
	bcftools view -s $* -Oz -o $@ $<
	bcftools index -t $@

svviz2_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.svviz2_mapq.vcf.gz : illumina-polaris-v2.1.genoytped.passing.vcf.gz
	svviz22vcf --model mapq -i $< -r svviz2_polaris \
		-s $(notdir $(BAM:.bam=)) \
		-o /dev/stdout | \
		bcftools reheader -s <(echo -e "NA12878") - | \
		sed 's/\bnan\b/./g' | \
		bgzip > $@
	bcftools index -t $@

svviz2_polaris/%.illumina-polaris-v2.1.genoytped.passing.svviz2_mapq.vcf.gz : svviz2_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.svviz2_mapq.vcf.gz
	bcftools view -s $* -Oz -o $@ $<
	bcftools index -t $@

$(eval $(call truvari_DEL_template, truvari_svviz2_count_polaris_DEL, svviz2_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.svviz2_count.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_svviz2_count_polaris_INS, svviz2_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.svviz2_count.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_DEL_template, truvari_svviz2_mapq_polaris_DEL, svviz2_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.svviz2_mapq.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_svviz2_mapq_polaris_INS, svviz2_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.svviz2_mapq.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))

svviz2_concordance: \
	truvari_svviz2_count_polaris_DEL/summary.txt \
	truvari_svviz2_count_polaris_INS/summary.txt \
	truvari_svviz2_mapq_polaris_DEL/summary.txt \
	truvari_svviz2_mapq_polaris_INS/summary.txt \
	truvari_svviz2_mapq_polaris_DEL.list.gq.csv \
	truvari_svviz2_mapq_polaris_INS.list.gq.csv
	


# SVTyper trio analysis
svtyper/NA12878.%.svtyper.vcf.gz : %.vcf.gz $(BAM)
	svtyper -i <(bcftools view -G $<) -B $(BAM) -l $(notdir $(BAM)).json | \
		sed 's/=""/="/' | \
		bgzip > $@
	bcftools index -t $@

$(eval $(call truvari_DEL_template, truvari_svtyper_polaris_DEL, svtyper/NA12878.illumina-polaris-v2.1.genoytped.passing.svtyper.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_svtyper_polaris_INS, svtyper/NA12878.illumina-polaris-v2.1.genoytped.passing.svtyper.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))

svtyper_concordance: \
	truvari_svtyper_polaris_DEL/summary.txt \
	truvari_svtyper_polaris_INS/summary.txt \
	truvari_svtyper_polaris_DEL.list.gq.csv

.PHONY: svtyper_concordance

# Paragraph

paragraph_polaris/illumina-polaris-v2.1.genoytped.passing.vcf.gz : illumina-polaris-v2.1.genoytped.passing.vcf.gz
	mkdir -p $(dir $@)
	padAlleles -r $(REFERENCE) -i $< | bcftools sort -Oz -o $@
	bcftools index -t $@

paragraph_polaris/genotypes.vcf.gz : paragraph_polaris/illumina-polaris-v2.1.genoytped.passing.vcf.gz
	mkdir -p $(dir $@)
	multigrmpy.py \
		--scratch-dir $(TEMPDIR) -t $(THREADS) \
		-i $< \
		-m samples.txt \
		-r $(REFERENCE) \
		-o $(dir $@)
	bcftools index -t $@

paragraph_polaris/%.illumina-polaris-v2.1.genoytped.passing.paragraph.vcf.gz : paragraph_polaris/genotypes.vcf.gz
	bcftools view -s $* -Oz -o $@ $<
	bcftools index -t $@

$(eval $(call truvari_DEL_template, truvari_paragraph_polaris_DEL, paragraph_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.paragraph.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_DEL_template, truvari_paragraph_polaris_DEL_nofilt, paragraph_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.paragraph.nofilt.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_paragraph_polaris_INS, paragraph_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.paragraph.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_paragraph_polaris_INS_nofilt, paragraph_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.paragraph.nofilt.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))

paragraph_concordance: \
	truvari_paragraph_polaris_DEL/summary.txt \
	truvari_paragraph_polaris_DEL_nofilt/summary.txt \
	truvari_paragraph_polaris_INS/summary.txt \
	truvari_paragraph_polaris_INS_nofilt/summary.txt \
	truvari_paragraph_polaris_DEL_nofilt.list.gq.csv \
	truvari_paragraph_polaris_INS_nofilt.list.gq.csv

.PHONY: paragraph_concordance

# SV2

sv2_genotypes/ceph-trio.illumina-polaris-v2.1.genoytped.passing.vcf : illumina-polaris-v2.1.genoytped.passing.vcf.gz
	sv2 -T $(TEMPDIR) -g hg38 -M -i $(BAM) -v $< -snv $(SNV) -p $(PED) -o NA12878.illumina-polaris-v2.1.genoytped.passing
	sv2 -T $(TEMPDIR) -g hg38 -feats sv2_features -v $< -p $(PED) -o $(basename $(notdir $@))

# Fix up VCF (e.g. removing problematic INFO entries) to facilitate Truvari comparison
sv2_genotypes/NA12878.%.sv2.vcf.gz : sv2_genotypes/ceph-trio.%.vcf
	sed '/^#/b; s/NA/./g' $< | bcftools norm -f $(REFERENCE) -c s - | bcftools annotate -h sv2.header -x INFO/GENES - | bcftools view -s NA12878 -Oz -o $@
	bcftools index -t $@

# sv2 converts complex alleles to symbolic so pctsize can get thrown-off
define truvari_sv2_template =
$(1)/summary.txt : $(2) $(3)
	rm -rf $$(dir $$@)
	truvari bench -f $(REFERENCE) -b $$(word 2,$$^) -c $$< -o $$(dir $$@) \
    --sizemax 15000000 -s 50 -S 30 --pctsim=0 --pctsize=0 -r 20 -O 0.6 \
    --passonly --bSample NA12878 --cSample NA12878
endef

$(eval $(call truvari_sv2_template, truvari_sv2_polaris_DEL, sv2_genotypes/NA12878.illumina-polaris-v2.1.genoytped.passing.sv2.DEL.vcf.gz, illumina-polaris-v2.1.genoytped.passing.DEL.vcf.gz))
$(eval $(call truvari_sv2_template, truvari_sv2_polaris_DEL_nofilt, sv2_genotypes/NA12878.illumina-polaris-v2.1.genoytped.passing.sv2.DEL.nofilt.vcf.gz, illumina-polaris-v2.1.genoytped.passing.DEL.vcf.gz))
$(eval $(call truvari_sv2_template, truvari_sv2_polaris_INS, sv2_genotypes/NA12878.illumina-polaris-v2.1.genoytped.passing.sv2.INS.vcf.gz, illumina-polaris-v2.1.genoytped.passing.INS.vcf.gz))
$(eval $(call truvari_sv2_template, truvari_sv2_polaris_INS_nofilt, sv2_genotypes/NA12878.illumina-polaris-v2.1.genoytped.passing.sv2.INS.nofilt.vcf.gz, illumina-polaris-v2.1.genoytped.passing.INS.vcf.gz))

sv2_concordance: \
	truvari_sv2_polaris_DEL/summary.txt \
	truvari_sv2_polaris_DEL_nofilt/summary.txt \
	truvari_sv2_polaris_INS/summary.txt \
	truvari_sv2_polaris_INS_nofilt/summary.txt \
	truvari_sv2_polaris_DEL_nofilt.list.gq.csv

.PHONY: sv2_concordance


# Delly Genotyping

delly/%.bcf : %.vcf.gz
	bcftools view -Ob -o $@ $<
	bcftools index -c $@

delly/NA12878.%.delly.bcf : delly/%.bcf
	delly call -g $(REFERENCE) -v $< -o $@ -x $(DELLY_HOME)/excludeTemplates/human.hg38.excl.tsv $(BAM)

delly/ceph-trio.%.delly.bcf : delly/NA12878.%.delly.bcf
	#bcftools merge -m id -Ob -o $@ $^
	cp $< $@
	bcftools index -c $@ 

# Unfortunately this drops sites instead of setting the FILTER columns
delly/ceph-trio.%.delly.filter.bcf : delly/ceph-trio.%.delly.bcf
	delly filter -f germline -o $@ $<

delly/NA12878.%.filter.vcf.gz : delly/ceph-trio.%.filter.bcf
	bcftools view -s NA12878 -Oz -o $@ $<
	bcftools index -t $@

delly/NA12878.%.nofilt.vcf.gz : delly/ceph-trio.%.bcf
	bcftools view -s NA12878 -Ov $< | bcftools annotate -Oz -o $@ -x "FILTER" -
	bcftools index -t $@

$(eval $(call truvari_DEL_template, truvari_delly_polaris_DEL, delly/NA12878.illumina-polaris-v2.1.genoytped.passing.delly.filter.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_DEL_template, truvari_delly_polaris_DEL_nofilt, delly/NA12878.illumina-polaris-v2.1.genoytped.passing.delly.nofilt.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_delly_polaris_INS, delly/NA12878.illumina-polaris-v2.1.genoytped.passing.delly.filter.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))
$(eval $(call truvari_INS_template, truvari_delly_polaris_INS_nofilt, delly/NA12878.illumina-polaris-v2.1.genoytped.passing.delly.nofilt.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))

truvari_delly%.list.gq.csv : truvari_delly%/tp-call.vcf
	python3 $(NPSV_ROOT)/paper/variant_stats.py --sample NA12878 list <(fixSVVCF -r $(REFERENCE) -i $<) > $@

delly_concordance : \
	truvari_delly_polaris_DEL/summary.txt \
	truvari_delly_polaris_DEL_nofilt/summary.txt \
	truvari_delly_polaris_INS/summary.txt \
	truvari_delly_polaris_INS_nofilt/summary.txt \
	truvari_delly_polaris_DEL_nofilt.list.gq.csv \
	truvari_delly_polaris_INS_nofilt.list.gq.csv

.PHONY: delly_concordance

# GraphTyper 2 (https://github.com/DecodeGenetics/graphtyper)

region.list : $(GENOME)
	awk '{ print $$1 ":1-" $$2 }' $< > $@

graphtyper_polaris/illumina-polaris-v2.1.genoytped.passing.vcf.gz : illumina-polaris-v2.1.genoytped.passing.vcf.gz
	mkdir -p $(dir $@)
	gzip -dc $< | awk -F$$'\t' '{ gsub(";","|",$$3); print; }' OFS=$$'\t' | bgzip -c > $@
	bcftools index -t $@

graphtyper_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.graphtyper.vcf.gz : graphtyper_polaris/illumina-polaris-v2.1.genoytped.passing.vcf.gz bams.txt
	mkdir -p $(dir $@)
	graphtyper genotype_sv $(REFERENCE) $< \
		--output=$(dir $@) \
		--sams=bams.txt \
		--region_file=region.list \
		--force_no_copy_reference --threads=$(THREADS)
	bcftools concat --naive $(dir $@)/**/*.vcf.gz | bcftools sort -Oz -o $@ -
	bcftools index -t $@	 

# Select the "AGGREGATED" model
graphtyper_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.graphtyper.DEL.vcf.gz : graphtyper_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.graphtyper.vcf.gz
	bcftools view -i '(SVTYPE ~ "^DEL" && INFO/SVMODEL=="AGGREGATED")' -Oz -o $@ $<
	bcftools index -t $@

graphtyper_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.graphtyper.INS.vcf.gz : graphtyper_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.graphtyper.vcf.gz
	bcftools view -i '((SVTYPE ~ "^INS" || SVTYPE ~ "^DUP") && INFO/SVMODEL=="AGGREGATED")' $< | sed '/^#/!s/DUP/INS/g' | bgzip -c > $@
	bcftools index -t $@

graphtyper_polaris/%.illumina-polaris-v2.1.genoytped.passing.graphtyper.DEL.vcf.gz : graphtyper_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.graphtyper.DEL.vcf.gz
	bcftools view -s $* -Oz -o $@ $<
	bcftools index -t $@

graphtyper_polaris/%.illumina-polaris-v2.1.genoytped.passing.graphtyper.INS.vcf.gz : graphtyper_polaris/ceph-trio.illumina-polaris-v2.1.genoytped.passing.graphtyper.INS.vcf.gz
	bcftools view -s $* -Oz -o $@ $<
	bcftools index -t $@

$(eval $(call truvari_template, truvari_graphtyper_polaris_DEL, graphtyper_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.graphtyper.DEL.vcf.gz, illumina-polaris-v2.1.genoytped.passing.DEL.vcf.gz))
$(eval $(call truvari_template, truvari_graphtyper_polaris_DEL_nofilt, graphtyper_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.graphtyper.DEL.nofilt.vcf.gz, illumina-polaris-v2.1.genoytped.passing.DEL.vcf.gz))
$(eval $(call truvari_template, truvari_graphtyper_polaris_INS, graphtyper_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.graphtyper.INS.vcf.gz, illumina-polaris-v2.1.genoytped.passing.INS.vcf.gz))
$(eval $(call truvari_template, truvari_graphtyper_polaris_INS_nofilt, graphtyper_polaris/NA12878.illumina-polaris-v2.1.genoytped.passing.graphtyper.INS.nofilt.vcf.gz, illumina-polaris-v2.1.genoytped.passing.INS.vcf.gz))


graphtyper_concordance: \
	truvari_graphtyper_polaris_DEL/summary.txt \
	truvari_graphtyper_polaris_DEL_nofilt/summary.txt \
	truvari_graphtyper_polaris_INS/summary.txt \
	truvari_graphtyper_polaris_INS_nofilt/summary.txt \
	truvari_graphtyper_polaris_DEL_nofilt.list.gq.csv \
	truvari_graphtyper_polaris_INS_nofilt.list.gq.csv

.PHONY: graphtyper_concordance

# GenomeStrip

SV_METADATA_DIR ?= /storage/mlinderman/ngs/resources/genomestrip/Homo_sapiens_assembly38

genomestrip_preprocessing: 
	java -Xmx4g -cp $(CLASSPATH) \
		-Djava.io.tmpdir=$(TEMPDIR) \
		org.broadinstitute.gatk.queue.QCommandLine \
		-S $(SV_DIR)/qscript/SVPreprocess.q \
		-S $(SV_DIR)/qscript/SVQScript.q \
		-cp $(CLASSPATH) \
		-gatk $(SV_DIR)/lib/gatk/GenomeAnalysisTK.jar \
		-configFile $(SV_DIR)/conf/genstrip_parameters.txt \
		-ploidyMapFile $(SV_METADATA_DIR)/Homo_sapiens_assembly38.ploidymap.txt \
		-R $(REFERENCE) \
		-I /storage/mlinderman/ngs/resources/ceph-trio/hg38/final/NA12878/NA12878-ready-withLB.bam \
		-md $@ \
		-bamFilesAreDisjoint true \
		-jobLogDir genomestrip_log \
		-jobRunner ParallelShell -maxConcurrentRun $(THREADS) \
		-run

genomestrip/ceph-trio.%.genomestrip.vcf.gz : %.vcf.gz
	mkdir -p $(dir $@)
	java -Xmx4g -cp $(CLASSPATH) \
		-Djava.io.tmpdir=$(TEMPDIR) \
    	org.broadinstitute.gatk.queue.QCommandLine \
    	-S $(SV_DIR)/qscript/SVGenotyper.q \
    	-S $(SV_DIR)/qscript/SVQScript.q \
		-cp $(CLASSPATH) \
		-gatk $(SV_DIR)/lib/gatk/GenomeAnalysisTK.jar \
		-configFile $(SV_DIR)/conf/genstrip_parameters.txt \
		-rmd $(SV_METADATA_DIR) \
		-R $(REFERENCE) \
		-genomeMaskFile $(SV_METADATA_DIR)/Homo_sapiens_assembly38.svmask.fasta \
		-genderMapFile genomestrip.gender.txt \
		-ploidyMapFile $(SV_METADATA_DIR)/Homo_sapiens_assembly38.ploidymap.txt \
		-md genomestrip_preprocessing \
		-runDirectory $(dir $@) \
		-vcf $< \
		-I /storage/mlinderman/ngs/resources/ceph-trio/hg38/final/NA12878/NA12878-ready-withLB.bam \
		-O $@ \
		-bamFilesAreDisjoint true \
		-jobLogDir genomestrip_log \
		-jobRunner ParallelShell -maxConcurrentRun $(THREADS) \
		-run

# Remove FORMAT field that seems to be causing bcftools parsing errors
genomestrip/%.genomestrip.clean.vcf.gz : genomestrip/%.genomestrip.vcf.gz
	gzip -dc $< | sed 's/:NA:/:.:/g' | bcftools annotate -Oz -o $@ -x FORMAT/CNF -
	bcftools index -t $@

genomestrip/NA12878.%.genomestrip.vcf.gz : genomestrip/ceph-trio.%.genomestrip.clean.vcf.gz
	bcftools view -s NA12878 -Oz -o $@ $<
	bcftools index -t $@

$(eval $(call truvari_DEL_template, truvari_genomestrip_polaris_DEL, genomestrip/NA12878.illumina-polaris-v2.1.genoytped.passing.DEL.genomestrip.vcf.gz, illumina-polaris-v2.1.genoytped.passing.vcf.gz))

genomestrip_concordance: \
	truvari_genomestrip_polaris_DEL/summary.txt \
	truvari_genomestrip_polaris_DEL.len.csv \
	truvari_genomestrip_polaris_DEL.list.gq.csv

.PHONY: genomestrip_preprocessing

.SECONDARY: